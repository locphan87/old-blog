{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/tag.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/templates/tag-query.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","as","Link","to","replaceSlashes","name","Tag","posts","pageContext","title","sx","alignItems","justifyContent","flexFlow","variant","marginY","mt","TagComponent","props","allPost","data","nodes","BlogListItem","post","showTags","mb","fontSize","color","a","date","Listing","className"],"mappings":"2FAAA,yEA8BeA,IAjBE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAAsB,EACTC,cAAvBC,EADgC,EAChCA,SAAUC,EADsB,EACtBA,SAElB,OACE,kBAAC,IAAMC,SAAP,KACGJ,EAAKK,KAAI,SAACC,EAAKC,GAAN,OACR,kBAAC,IAAMH,SAAP,CAAgBI,IAAKF,EAAIG,QACpBF,GAAF,KACD,kBAAC,IAAD,CAAOG,GAAIC,OAAMC,GAAIC,YAAe,IAAIV,EAAL,IAAiBD,EAAjB,IAA6BI,EAAIG,OACjEH,EAAIQ,a,kKCgCFC,EAvBH,SAAC,GAAqC,IAAnCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAA4B,EACjBhB,cAAvBC,EADwC,EACxCA,SAAUC,EAD8B,EAC9BA,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKe,MAAK,QAAUD,EAAYH,OAChC,YAAC,IAAD,CAAMK,GAAI,CAAEC,WAAY,SAAUC,eAAgB,gBAAiBC,SAAU,SAC3E,YAAC,IAAD,CAASZ,GAAG,KAAKa,QAAQ,YAAYJ,GAAI,CAAEK,QAAS,IACjDP,EAAYH,MAEf,YAAC,IAAD,CACEJ,GAAIC,OACJQ,GAAI,CAAEI,QAAS,kBAAmBC,QAAS,GAC3CZ,GAAIC,YAAe,IAAIV,EAAL,IAAiBD,IAHrC,kBAQF,YAAC,IAAD,CAASc,MAAOA,EAAOG,GAAI,CAAEM,GAAI,CAAC,EAAG,QC9C5BC,UCcA,YAAiD,IAAhBC,EAAgB,oBAEpDC,EACND,EADFE,KAAQD,QAGV,OAAO,kBAAC,EAAD,eAAKZ,MAAOY,EAAQE,OAAWH,M,2GCkBzBI,EAjBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,gBAAT,gBACnB,YAAC,IAAD,CAAKC,GAAI,GACP,YAAC,IAAD,CAAOxB,GAAIC,OAAMC,GAAIoB,EAAKvB,KAAMU,GAAI,CAAEgB,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SAC/DJ,EAAKd,OAER,iBAAGC,GAAI,CAAEiB,MAAO,YAAaX,GAAI,EAAGY,EAAG,CAAED,MAAO,aAAeD,SAAU,CAAC,EAAG,EAAG,KAC9E,wBAAOH,EAAKM,MACXN,EAAKhC,MAAQiC,GACZ,YAAC,IAAM7B,SAAP,WAEE,YAAC,IAAD,CAAUJ,KAAMgC,EAAKhC,WCHhBuC,IATC,SAAC,GAAD,IAAGvB,EAAH,EAAGA,MAAH,IAAUwB,iBAAV,eAA0BP,gBAA1B,gBACd,uBAASd,GAAI,CAAEe,GAAI,CAAC,EAAG,EAAG,IAAMM,UAAWA,GACxCxB,GACCA,EAAMX,KAAI,SAAC2B,GAAD,OACR,YAAC,EAAD,CAAcxB,IAAKwB,EAAKvB,KAAMuB,KAAMA,EAAMC,SAAUA","file":"component---src-lekoarts-gatsby-theme-minimal-blog-core-templates-tag-query-tsx-6d9c9075ee2aeab9eb67.js","sourcesContent":["import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport { jsx, Heading, Link as TLink } from \"theme-ui\"\nimport { Flex } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport Listing from \"./listing\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport SEO from \"./seo\"\n\ntype TagProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n}\n\nconst Tag = ({ posts, pageContext }: TagProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <SEO title={`Tag: ${pageContext.name}`} />\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          {pageContext.name}\n        </Heading>\n        <TLink\n          as={Link}\n          sx={{ variant: `links.secondary`, marginY: 2 }}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </TLink>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Tag\n","import { graphql } from \"gatsby\";\nimport TagComponent from \"../components/tag\";\n\nexport default TagComponent;\n\nexport const query = graphql`\n  query($slug: String!, $formatString: String!) {\n    allPost(\n      sort: { fields: date, order: DESC }\n      filter: { tags: { elemMatch: { slug: { eq: $slug } } } }\n    ) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Tag from \"../../gatsby-theme-minimal-blog/components/tag\";\n\ntype Props = {\n  data: {\n    allPost: any;\n    [key: string]: any;\n  };\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean;\n    slug: string;\n    name: string;\n    [key: string]: any;\n  };\n  [key: string]: any;\n};\n\nexport default function MinimalBlogCoreTag({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props;\n\n  return <Tag posts={allPost.nodes} {...props} />;\n}\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Link as TLink } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport BlogListItem from \"./blog-list-item\";\n\ntype ListingProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  className?: string;\n  showTags?: boolean;\n};\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts &&\n      posts.map((post) => (\n        <BlogListItem key={post.slug} post={post} showTags={showTags} />\n      ))}\n  </section>\n);\n\nexport default Listing;\n"],"sourceRoot":""}