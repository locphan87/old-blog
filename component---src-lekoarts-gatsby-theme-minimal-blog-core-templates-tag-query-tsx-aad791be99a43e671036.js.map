{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/tag.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/templates/tag-query.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","filter","x","includes","slug","map","tag","i","key","as","Link","to","replaceSlashes","name","Tag","posts","pageContext","title","sx","alignItems","justifyContent","flexFlow","variant","marginY","mt","TagComponent","props","allPost","data","nodes","BlogListItem","post","showTags","mb","fontSize","color","a","date","Listing","className"],"mappings":"2FAAA,yEAmCeA,IAtBE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAAsB,EACTC,cAAvBC,EADgC,EAChCA,SAAUC,EADsB,EACtBA,SAElB,OACE,kBAAC,IAAMC,SAAP,KACGJ,EACEK,QAAO,SAACC,GAAD,OAAQ,CAAC,UAAW,WAAWC,SAASD,EAAEE,SACjDC,KAAI,SAACC,EAAKC,GAAN,OACH,kBAAC,IAAMP,SAAP,CAAgBQ,IAAKF,EAAIF,QACpBG,GAAF,KACD,kBAAC,IAAD,CACEE,GAAIC,OACJC,GAAIC,YAAe,IAAIb,EAAL,IAAiBD,EAAjB,IAA6BQ,EAAIF,OAElDE,EAAIO,a,kKCiCJC,EA7BH,SAAC,GAAqC,IAAnCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAA4B,EACjBnB,cAAvBC,EADwC,EACxCA,SAAUC,EAD8B,EAC9BA,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKkB,MAAK,QAAUD,EAAYH,OAChC,YAAC,IAAD,CACEK,GAAI,CACFC,WAAY,SACZC,eAAgB,gBAChBC,SAAU,SAGZ,YAAC,IAAD,CAASZ,GAAG,KAAKa,QAAQ,YAAYJ,GAAI,CAAEK,QAAS,IACjDP,EAAYH,MAEf,YAAC,IAAD,CACEJ,GAAIC,OACJQ,GAAI,CAAEI,QAAS,kBAAmBC,QAAS,GAC3CZ,GAAIC,YAAe,IAAIb,EAAL,IAAiBD,IAHrC,kBAQF,YAAC,IAAD,CAASiB,MAAOA,EAAOG,GAAI,CAAEM,GAAI,CAAC,EAAG,QCpD5BC,UCcA,YAAiD,IAAhBC,EAAgB,oBAEpDC,EACND,EADFE,KAAQD,QAGV,OAAO,kBAAC,EAAD,eAAKZ,MAAOY,EAAQE,OAAWH,M,2GCyBzBI,EAxBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,gBAAT,gBACnB,YAAC,IAAD,CAAKC,GAAI,GACP,YAAC,IAAD,CAAOxB,GAAIC,OAAMC,GAAIoB,EAAK3B,KAAMc,GAAI,CAAEgB,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SAC/DJ,EAAKd,OAER,iBACEC,GAAI,CACFiB,MAAO,YACPX,GAAI,EACJY,EAAG,CAAED,MAAO,aACZD,SAAU,CAAC,EAAG,EAAG,KAGnB,wBAAOH,EAAKM,MACXN,EAAKnC,MAAQoC,GACZ,YAAC,IAAMhC,SAAP,WAEE,YAAC,IAAD,CAAUJ,KAAMmC,EAAKnC,WCVhB0C,IATC,SAAC,GAAD,IAAGvB,EAAH,EAAGA,MAAH,IAAUwB,iBAAV,eAA0BP,gBAA1B,gBACd,uBAASd,GAAI,CAAEe,GAAI,CAAC,EAAG,EAAG,IAAMM,UAAWA,GACxCxB,GACCA,EAAMV,KAAI,SAAC0B,GAAD,OACR,YAAC,EAAD,CAAcvB,IAAKuB,EAAK3B,KAAM2B,KAAMA,EAAMC,SAAUA","file":"component---src-lekoarts-gatsby-theme-minimal-blog-core-templates-tag-query-tsx-aad791be99a43e671036.js","sourcesContent":["import React from 'react'\nimport { Link as TLink } from 'theme-ui'\nimport { Link } from 'gatsby'\nimport useMinimalBlogConfig from '../hooks/use-minimal-blog-config'\nimport replaceSlashes from '../utils/replaceSlashes'\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags\n        .filter((x) => !['project', 'summary'].includes(x.slug))\n        .map((tag, i) => (\n          <React.Fragment key={tag.slug}>\n            {!!i && `, `}\n            <TLink\n              as={Link}\n              to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}\n            >\n              {tag.name}\n            </TLink>\n          </React.Fragment>\n        ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport { jsx, Heading, Link as TLink } from 'theme-ui'\nimport { Flex } from '@theme-ui/components'\nimport { Link } from 'gatsby'\nimport Layout from './layout'\nimport useMinimalBlogConfig from '../hooks/use-minimal-blog-config'\nimport Listing from './listing'\nimport replaceSlashes from '../utils/replaceSlashes'\nimport SEO from './seo'\n\ntype TagProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n}\n\nconst Tag = ({ posts, pageContext }: TagProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <SEO title={`Tag: ${pageContext.name}`} />\n      <Flex\n        sx={{\n          alignItems: `center`,\n          justifyContent: `space-between`,\n          flexFlow: `wrap`,\n        }}\n      >\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          {pageContext.name}\n        </Heading>\n        <TLink\n          as={Link}\n          sx={{ variant: `links.secondary`, marginY: 2 }}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </TLink>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Tag\n","import { graphql } from 'gatsby'\nimport TagComponent from '../components/tag'\n\nexport default TagComponent\n\nexport const query = graphql`\n  query($slug: String!, $formatString: String!) {\n    allPost(\n      sort: { fields: date, order: DESC }\n      filter: { tags: { elemMatch: { slug: { eq: $slug } } } }\n    ) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Tag from '../../gatsby-theme-minimal-blog/components/tag'\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: any\n  }\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTag({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tag posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport React from 'react'\nimport { jsx, Link as TLink } from 'theme-ui'\nimport { Box } from '@theme-ui/components'\nimport { Link } from 'gatsby'\nimport ItemTags from './item-tags'\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport BlogListItem from './blog-list-item'\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts &&\n      posts.map((post) => (\n        <BlogListItem key={post.slug} post={post} showTags={showTags} />\n      ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}