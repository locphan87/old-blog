{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/templates/post-query.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js"],"names":["shadow","map","v","Post","data","post","mdx","bannerSrc","R","title","description","excerpt","image","pathname","slug","canonicalUrl","as","variant","sx","color","mt","a","fontSize","date","tags","Fragment","timeToRead","my","boxShadow","join","body","PostComponent","props","MDXRenderer","require","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","ItemTags","useMinimalBlogConfig","tagsPath","basePath","filter","x","includes","tag","i","key","LocalizedLink","to","replaceSlashes","name","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_setPrototypeOf","o","p","setPrototypeOf","__proto__","len","length","arr2","React","useMDXScope","scope","children","mdxScope","End","fullScope","keys","values","fn","minLen","n","prototype","toString","call","slice","constructor","test","Reflect","construct","sham","Proxy","Date","e","isNativeReflectConstruct","_construct","Parent","args","Class","push","apply","instance","Function","bind","arguments"],"mappings":"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","file":"component---src-lekoarts-gatsby-theme-minimal-blog-core-templates-post-query-tsx-773d9976a9d8b930c58b.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading } from 'theme-ui'\nimport * as R from 'ramda'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport React from 'react'\nimport Layout from './layout'\nimport ItemTags from './item-tags'\nimport SEO from './seo'\n\ntype PostProps = {\n  data: {\n    mdx: {\n      slug: string\n      tableOfContents?: any\n    }\n    post: {\n      slug: string\n      title: string\n      date: string\n      tags?: {\n        name: string\n        slug: string\n      }[]\n      description?: string\n      canonicalUrl?: string\n      body: string\n      excerpt: string\n      timeToRead?: number\n      banner?: {\n        childImageSharp: {\n          resize: {\n            src: string\n          }\n        }\n      }\n    }\n  }\n}\n\nconst px = [`32px`, `16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.15) 0px ${v} ${v} 0px`)\n\nconst Post = ({ data: { post, mdx } }: PostProps) => {\n  if (!post) {\n    return <div>This page has not been translated yet</div>\n  }\n  const bannerSrc = R.path(['banner', 'childImageSharp', 'resize', 'src'], post)\n  // const { tableOfContents } = mdx || {}\n  return (\n    <Layout>\n      <SEO\n        title={post.title}\n        description={post.description ? post.description : post.excerpt}\n        image={bannerSrc}\n        pathname={post.slug}\n        canonicalUrl={post.canonicalUrl}\n      />\n      <Heading as=\"h1\" variant=\"styles.h1\">\n        {post.title}\n      </Heading>\n      <p\n        sx={{\n          color: `secondary`,\n          mt: 3,\n          a: { color: `secondary` },\n          fontSize: [1, 1, 2],\n        }}\n      >\n        <time>{post.date}</time>\n        {post.tags && (\n          <React.Fragment>\n            {` — `}\n            <ItemTags tags={post.tags} />\n          </React.Fragment>\n        )}\n        {post.timeToRead && ` — `}\n        {post.timeToRead && <span>{post.timeToRead} min read</span>}\n      </p>\n      <section\n        sx={{\n          my: 5,\n          '.gatsby-resp-image-wrapper': {\n            my: [4, 4, 5],\n            boxShadow: shadow.join(`, `),\n          },\n          variant: `layout.content`,\n        }}\n      >\n        <MDXRenderer>{post.body}</MDXRenderer>\n      </section>\n    </Layout>\n  )\n}\n\nexport default Post\n","import { graphql } from 'gatsby'\nimport PostComponent from '../components/post'\n\nexport default PostComponent\n\nexport const query = graphql`\n  query(\n    $locale: String!\n    $id: String!\n    $slug: String!\n    $formatString: String!\n  ) {\n    mdx(children: { elemMatch: { id: { eq: $id } } }) {\n      slug\n      tableOfContents(maxDepth: 3)\n    }\n    post(slug: { eq: $slug }, fields: { locale: { eq: $locale } }) {\n      slug\n      title\n      date(formatString: $formatString)\n      tags {\n        name\n        slug\n      }\n      body\n      description\n      canonicalUrl\n      excerpt\n      timeToRead\n      banner {\n        childImageSharp {\n          resize(width: 1200, quality: 90) {\n            src\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Post from '../../gatsby-theme-minimal-blog/components/post'\n\ntype Props = {\n  data: {\n    post: any\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCorePost({ ...props }: Props) {\n  return <Post {...props} />\n}\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","import React from 'react'\nimport { Link as TLink } from 'theme-ui'\nimport { LocalizedLink } from 'gatsby-theme-i18n'\nimport useMinimalBlogConfig from '../hooks/use-minimal-blog-config'\nimport replaceSlashes from '../utils/replaceSlashes'\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags\n        .filter((x) => !['project', 'summary'].includes(x.slug))\n        .map((tag, i) => (\n          <React.Fragment key={tag.slug}>\n            {!!i && `, `}\n            <TLink\n              as={LocalizedLink}\n              to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}\n            >\n              {tag.name}\n            </TLink>\n          </React.Fragment>\n        ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;"],"sourceRoot":""}