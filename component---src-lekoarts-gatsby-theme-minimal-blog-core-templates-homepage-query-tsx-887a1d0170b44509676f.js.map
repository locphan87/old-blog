{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/templates/homepage-query.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","filter","x","includes","slug","map","tag","i","key","as","LocalizedLink","to","replaceSlashes","name","Text","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","sx","fontSize","fontWeight","color","isMDXComponent","Homepage","posts","blogPath","siteTitle","useSiteMetadata","visuallyHidden","mb","p","mt","variant","text","showTags","HomepageComponent","allPost","data","nodes","BlogListItem","post","title","a","date","Listing","className"],"mappings":"2FAAA,yEAmCeA,IAtBE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAAsB,EACTC,cAAvBC,EADgC,EAChCA,SAAUC,EADsB,EACtBA,SAElB,OACE,kBAAC,IAAMC,SAAP,KACGJ,EACEK,QAAO,SAACC,GAAD,OAAQ,CAAC,UAAW,WAAWC,SAASD,EAAEE,SACjDC,KAAI,SAACC,EAAKC,GAAN,OACH,kBAAC,IAAMP,SAAP,CAAgBQ,IAAKF,EAAIF,QACpBG,GAAF,KACD,kBAAC,IAAD,CACEE,GAAIC,IACJC,GAAIC,YAAe,IAAIb,EAAL,IAAiBD,EAAjB,IAA6BQ,EAAIF,OAElDE,EAAIO,a,+CClBGA,E,yJAKhBC,GALgBD,EAKK,OALG,SAA6BE,GAEzD,OADAC,QAAQC,KAAK,aAAeJ,EAAO,2EAC5B,oBAASE,KAIZG,EAAc,CAClBC,aAT0B,IAYb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGN,EACF,8BACD,OAAO,cALS,UAKT,iBAAeG,EAAiBH,EAAhC,CAAuCM,WAAYA,EAAYC,QAAQ,cAC5E,cAACR,EAAD,CAAMS,GAAI,CACRC,SAAU,CAAC,EAAG,EAAG,GACjBC,WAAY,OACZC,MAAO,WACNJ,QAAQ,QAJX,OAOA,0HAKJF,EAAWO,gBAAiB,ECJ5B,IA0BeC,EA1BE,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,MAAwB,EACXhC,cAAvBE,EADkC,EAClCA,SAAU+B,EADwB,EACxBA,SACVC,EAAcC,cAAdD,UAER,OACE,YAAC,IAAD,KACE,kBAAIR,GAAIU,KAAiBF,GACzB,uBACER,GAAI,CACFW,GAAI,CAAC,EAAG,EAAG,GACXC,EAAG,CAAEX,SAAU,CAAC,EAAG,EAAG,GAAIY,GAAI,GAC9BC,QAAS,iBAGX,YAAC,EAAD,OAEF,YAAC,IAAD,CAAOC,KAAK,gBACV,YAAC,IAAD,CAAe3B,GAAIC,YAAe,IAAIb,EAAL,IAAiB+B,IAAlD,mBAIF,YAAC,IAAD,CAASD,MAAOA,EAAOU,UAAU,MClDxBC,UCQA,YAAsD,IAAhBzB,EAAgB,oBAEzD0B,EACN1B,EADF2B,KAAQD,QAGV,OAAO,kBAAC,EAAD,eAAUZ,MAAOY,EAAQE,OAAW5B,M,2GCmC9B6B,EA5BM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASN,gBAAT,gBACnB,YAAC,IAAD,CAAKL,GAAI,GACP,YAAC,IAAD,CACEzB,GAAIC,IACJC,GAAIkC,EAAKzC,KACTmB,GAAI,CAAEC,SAAU,CAAC,EAAG,EAAG,GAAIE,MAAO,SAEjCmB,EAAKC,OAER,iBACEvB,GAAI,CACFG,MAAO,YACPU,GAAI,EACJW,EAAG,CAAErB,MAAO,aACZF,SAAU,CAAC,EAAG,EAAG,KAGnB,wBAAOqB,EAAKG,MACXH,EAAKjD,MAAQ2C,GACZ,YAAC,IAAMvC,SAAP,WAEE,YAAC,IAAD,CAAUJ,KAAMiD,EAAKjD,WCdhBqD,IATC,SAAC,GAAD,IAAGpB,EAAH,EAAGA,MAAH,IAAUqB,iBAAV,eAA0BX,gBAA1B,gBACd,uBAAShB,GAAI,CAAEW,GAAI,CAAC,EAAG,EAAG,IAAMgB,UAAWA,GACxCrB,GACCA,EAAMxB,KAAI,SAACwC,GAAD,OACR,YAAC,EAAD,CAAcrC,IAAKqC,EAAKzC,KAAMyC,KAAMA,EAAMN,SAAUA","file":"component---src-lekoarts-gatsby-theme-minimal-blog-core-templates-homepage-query-tsx-887a1d0170b44509676f.js","sourcesContent":["import React from 'react'\nimport { Link as TLink } from 'theme-ui'\nimport { LocalizedLink } from 'gatsby-theme-i18n'\nimport useMinimalBlogConfig from '../hooks/use-minimal-blog-config'\nimport replaceSlashes from '../utils/replaceSlashes'\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags\n        .filter((x) => !['project', 'summary'].includes(x.slug))\n        .map((tag, i) => (\n          <React.Fragment key={tag.slug}>\n            {!!i && `, `}\n            <TLink\n              as={LocalizedLink}\n              to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}\n            >\n              {tag.name}\n            </TLink>\n          </React.Fragment>\n        ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Text sx={{\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }} mdxType=\"Text\">\n  Hi.\n    </Text>\n    <p>{`I’m a software developer and technical lead with 10 years’ experience in software development.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { LocalizedLink } from 'gatsby-theme-i18n'\nimport Layout from './layout'\nimport Title from './title'\nimport Listing from './listing'\nimport List from './list'\nimport useMinimalBlogConfig from '../hooks/use-minimal-blog-config'\nimport useSiteMetadata from '../hooks/use-site-metadata'\nimport replaceSlashes from '../utils/replaceSlashes'\nimport { visuallyHidden } from '../styles/utils'\n// @ts-ignore\nimport Hero from '../texts/hero'\n// @ts-ignore\n// import Bottom from \"../texts/bottom\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section\n        sx={{\n          mb: [5, 6, 7],\n          p: { fontSize: [1, 2, 3], mt: 2 },\n          variant: `section_hero`,\n        }}\n      >\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <LocalizedLink to={replaceSlashes(`/${basePath}/${blogPath}`)}>\n          Read all posts\n        </LocalizedLink>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from 'gatsby'\nimport HomepageComponent from '../components/homepage'\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query($locale: String!, $formatString: String!) {\n    allPost(\n      filter: {\n        display: { ne: HIDDEN }\n        fields: { locale: { eq: $locale } }\n        tags: { elemMatch: { slug: { nin: [\"project\", \"summary\"] } } }\n      }\n      sort: { fields: date, order: DESC }\n      limit: 5\n    ) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Homepage from '../../gatsby-theme-minimal-blog/components/homepage'\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport React from 'react'\nimport { jsx, Link as TLink } from 'theme-ui'\nimport { Box } from '@theme-ui/components'\nimport { LocalizedLink } from 'gatsby-theme-i18n'\nimport ItemTags from './item-tags'\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink\n      as={LocalizedLink}\n      to={post.slug}\n      sx={{ fontSize: [1, 2, 3], color: `text` }}\n    >\n      {post.title}\n    </TLink>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport BlogListItem from './blog-list-item'\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts &&\n      posts.map((post) => (\n        <BlogListItem key={post.slug} post={post} showTags={showTags} />\n      ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}