{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/templates/blog-query.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","filter","x","includes","slug","map","tag","i","key","as","LocalizedLink","to","replaceSlashes","name","Blog","posts","title","sx","alignItems","justifyContent","flexFlow","variant","marginY","mt","BlogComponent","props","allPost","data","nodes","BlogListItem","post","showTags","mb","fontSize","color","a","date","Listing","className"],"mappings":"4FAAA,yEAmCeA,IAtBE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAAsB,EACTC,cAAvBC,EADgC,EAChCA,SAAUC,EADsB,EACtBA,SAElB,OACE,kBAAC,IAAMC,SAAP,KACGJ,EACEK,QAAO,SAACC,GAAD,OAAQ,CAAC,UAAW,WAAWC,SAASD,EAAEE,SACjDC,KAAI,SAACC,EAAKC,GAAN,OACH,kBAAC,IAAMP,SAAP,CAAgBQ,IAAKF,EAAIF,QACpBG,GAAF,KACD,kBAAC,IAAD,CACEE,GAAIC,IACJC,GAAIC,YAAe,IAAIb,EAAL,IAAiBD,EAAjB,IAA6BQ,EAAIF,OAElDE,EAAIO,a,kKC4BJC,EA7BF,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,MAAwB,EACPlB,cAAvBC,EAD8B,EAC9BA,SAAUC,EADoB,EACpBA,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKiB,MAAM,SACX,YAAC,IAAD,CACEC,GAAI,CACFC,WAAY,SACZC,eAAgB,gBAChBC,SAAU,SAGZ,YAAC,IAAD,CAASX,GAAG,KAAKY,QAAQ,YAAYJ,GAAI,CAAEK,QAAS,IAApD,QAGA,YAAC,IAAD,CACEb,GAAIC,IACJO,GAAI,CAAEI,QAAS,kBAAmBC,QAAS,GAC3CX,GAAIC,YAAe,IAAIb,EAAL,IAAiBD,IAHrC,kBAQF,YAAC,IAAD,CAASiB,MAAOA,EAAOE,GAAI,CAAEM,GAAI,CAAC,EAAG,QC/C5BC,UCQA,YAAkD,IAAhBC,EAAgB,oBAErDC,EACND,EADFE,KAAQD,QAGV,OAAO,kBAAC,EAAD,eAAMX,MAAOW,EAAQE,OAAWH,M,2GCmC1BI,EA5BM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,gBAAT,gBACnB,YAAC,IAAD,CAAKC,GAAI,GACP,YAAC,IAAD,CACEvB,GAAIC,IACJC,GAAImB,EAAK1B,KACTa,GAAI,CAAEgB,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SAEjCJ,EAAKd,OAER,iBACEC,GAAI,CACFiB,MAAO,YACPX,GAAI,EACJY,EAAG,CAAED,MAAO,aACZD,SAAU,CAAC,EAAG,EAAG,KAGnB,wBAAOH,EAAKM,MACXN,EAAKlC,MAAQmC,GACZ,YAAC,IAAM/B,SAAP,WAEE,YAAC,IAAD,CAAUJ,KAAMkC,EAAKlC,WCdhByC,IATC,SAAC,GAAD,IAAGtB,EAAH,EAAGA,MAAH,IAAUuB,iBAAV,eAA0BP,gBAA1B,gBACd,uBAASd,GAAI,CAAEe,GAAI,CAAC,EAAG,EAAG,IAAMM,UAAWA,GACxCvB,GACCA,EAAMV,KAAI,SAACyB,GAAD,OACR,YAAC,EAAD,CAActB,IAAKsB,EAAK1B,KAAM0B,KAAMA,EAAMC,SAAUA","file":"component---src-lekoarts-gatsby-theme-minimal-blog-core-templates-blog-query-tsx-3dd4eaef70105bfc5765.js","sourcesContent":["import React from 'react'\nimport { Link as TLink } from 'theme-ui'\nimport { LocalizedLink } from 'gatsby-theme-i18n'\nimport useMinimalBlogConfig from '../hooks/use-minimal-blog-config'\nimport replaceSlashes from '../utils/replaceSlashes'\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags\n        .filter((x) => !['project', 'summary'].includes(x.slug))\n        .map((tag, i) => (\n          <React.Fragment key={tag.slug}>\n            {!!i && `, `}\n            <TLink\n              as={LocalizedLink}\n              to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}\n            >\n              {tag.name}\n            </TLink>\n          </React.Fragment>\n        ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport { jsx, Heading, Link as TLink } from 'theme-ui'\nimport { LocalizedLink } from 'gatsby-theme-i18n'\nimport { Flex } from '@theme-ui/components'\nimport Layout from './layout'\nimport Listing from './listing'\nimport useMinimalBlogConfig from '../hooks/use-minimal-blog-config'\nimport replaceSlashes from '../utils/replaceSlashes'\nimport SEO from './seo'\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Blog = ({ posts }: PostsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Flex\n        sx={{\n          alignItems: `center`,\n          justifyContent: `space-between`,\n          flexFlow: `wrap`,\n        }}\n      >\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          Blog\n        </Heading>\n        <TLink\n          as={LocalizedLink}\n          sx={{ variant: `links.secondary`, marginY: 2 }}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </TLink>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Blog\n","import { graphql } from 'gatsby'\nimport BlogComponent from '../components/blog'\n\nexport default BlogComponent\n\nexport const query = graphql`\n  query($locale: String!, $formatString: String!) {\n    allPost(\n      filter: {\n        display: { ne: HIDDEN }\n        fields: { locale: { eq: $locale } }\n        tags: { elemMatch: { slug: { nin: [\"project\", \"summary\"] } } }\n      }\n      sort: { fields: date, order: DESC }\n    ) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Blog from '../../gatsby-theme-minimal-blog/components/blog'\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreBlog({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Blog posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport React from 'react'\nimport { jsx, Link as TLink } from 'theme-ui'\nimport { Box } from '@theme-ui/components'\nimport { LocalizedLink } from 'gatsby-theme-i18n'\nimport ItemTags from './item-tags'\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink\n      as={LocalizedLink}\n      to={post.slug}\n      sx={{ fontSize: [1, 2, 3], color: `text` }}\n    >\n      {post.title}\n    </TLink>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport BlogListItem from './blog-list-item'\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts &&\n      posts.map((post) => (\n        <BlogListItem key={post.slug} post={post} showTags={showTags} />\n      ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}