{"componentChunkName":"component---src-lekoarts-gatsby-theme-minimal-blog-core-templates-post-query-tsx","path":"/vi/functional-programming-in-java-script","result":{"data":{"mdx":{"slug":"fp-js/","tableOfContents":{"items":[{"url":"#hello-fp","title":"Hello FP!"},{"url":"#why-javascript","title":"Why JavaScript?","items":[{"url":"#lambda-expressions","title":"Lambda Expressions"},{"url":"#higher-order-functions","title":"Higher order Functions"},{"url":"#closures","title":"Closures"},{"url":"#does-functional-programming-replace-object-oriented","title":"Does functional programming replace object-oriented?"}]},{"url":"#functional-programming","title":"Functional Programming","items":[{"url":"#pure-functions","title":"Pure Functions"},{"url":"#referential-transparency","title":"Referential Transparency"}]},{"url":"#functional-techniques","title":"Functional Techniques","items":[{"url":"#away-with-loops","title":"Away with loops!"},{"url":"#function-abstractions","title":"Function Abstractions"}]},{"url":"#functional-data-types","title":"Functional Data Types","items":[{"url":"#containerizing","title":"Containerizing"},{"url":"#functors","title":"Functors"},{"url":"#monads","title":"Monads"}]},{"url":"#interacting-with-the-dom","title":"Interacting With the DOM","items":[{"url":"#io-monad","title":"IO Monad"}]},{"url":"#conclusion","title":"Conclusion"}]}},"post":null},"pageContext":{"id":"0b6c0cf3-53c7-532a-803e-a5bb18c7acc1","slug":"/functional-programming-in-java-script","formatString":"DD/MM/YYYY","locale":"vi","hrefLang":"vi-VN","originalPath":"/functional-programming-in-java-script","dateFormat":"DD/MM/YYYY"}},"staticQueryHashes":["1239077767","307970764","3090400250","3090400250","318001574","3260054995","3493603132","3493603132"]}